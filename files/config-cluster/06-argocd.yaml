---
apiVersion: argoproj.io/v1alpha1
kind: ArgoCD
metadata:
  name: helms-deep
  namespace: argocd
spec:
  server:
    route:
      enabled: true
  resourceCustomizations: |
    operators.coreos.com/OperatorGroup:
      health.lua: |
        hs = {}
        hs.status = "Healthy"
        hs.message = "OperatorGroup created"
        return hs
    operators.coreos.com/Subscription:
      health.lua: |
        hs = {}
        if obj.status ~= nil then
          if obj.status.state == "AtLatestKnown" then
            hs.status = "Healthy"
            hs.message = "CSV is at latest known version"
            return hs
          end

          hs.status = "Progressing"
          hs.message = "CSV installation is progressing"
          return hs
        end

        hs.status = "Progressing"
        hs.message = "Pending OLM status update"
        return hs
    redhatgov.io/TsscPlatform:
      health.lua: |
        hs = {}
        hs.status = "Progressing"
        hs.message = "Installation is progressing"
        
        if obj.status ~= nil then
          if obj.status.conditions ~= nil then
            for i, condition in ipairs(obj.status.conditions) do
              if condition.type == "Running" and condition.status == "True" and condition.reason == "Successful" then
                hs.status = "Healthy"
                hs.message = condition.message
              end
            end
          end
        end

        return hs
    redhatgov.io/TsscPipeline:
      health.lua: |
        hs = {}
        hs.status = "Progressing"
        hs.message = "Installation is progressing"
        
        if obj.status ~= nil then
          if obj.status.conditions ~= nil then
            for i, condition in ipairs(obj.status.conditions) do
              if condition.type == "Running" and condition.status == "True" and condition.reason == "Successful" then
                hs.status = "Healthy"
                hs.message = condition.message
              end
            end
          end
        end

        return hs
