#####################################################################
#
# Expected input:
#   - jsm_issue_id: a key to the Jira Service Management issue
#
# Description: Fetches required information from the JSM issue,
# verifies the software factory name, creates a new software pipeline.
#
#####################################################################
- hosts: localhost
  gather_facts: false
  connection: local
  module_defaults:
    community.general.jira:
      uri: "{{ jsm_api }}"
      username: "{{ lookup('env', 'ATLASSIAN_API_USERNAME') }}"
      password: "{{ lookup('env', 'ATLASSIAN_API_TOKEN') }}"

    community.kubernetes.k8s_auth:
      host: "{{ lookup('env', 'OPENSHIFT_API_URL') }}"
      validate_certs: "{{ not (lookup('env', 'OPENSHIFT_API_INSECURE_CERTS') | bool) }}"

    community.kubernetes.k8s_info:
      host: "{{ lookup('env', 'OPENSHIFT_API_URL') }}"
      validate_certs: "{{ not (lookup('env', 'OPENSHIFT_API_INSECURE_CERTS') | bool) }}"

  vars:
    jira_var_lookups:
      project_name: 'customfield_10054'
      application_name: 'customfield_10055'

  tasks:
  - include_tasks: tasks/jira-fetch-issue.yml

  - set_fact:
      pipeline_name: "{{ jira_field_application_name|lower }}"

  - include_tasks: tasks/checkout-state-repo.yml
    vars:
      key_file: "{{ lookup('env', 'SSH_PRIVATE_KEY_FILE') }}"

  - name: sf - create software factory name
    set_fact:
      software_factory:
        name: "sf-{{ jira_field_project_name | lower | regex_replace('[^a-zA-Z0-9 ]','') | regex_replace(' ','-') }}"
  
  - set_fact:
      applications_dir: "{{ scm_dir }}/software-factories"
      factory_dir: "{{ scm_dir }}/software-factories/{{software_factory.name}}"

  - ansible.builtin.stat:
      path: "{{ applications_dir }}/{{software_factory.name}}.application.yml"
    register: stat_app_yaml

  - when:
      - not stat_app_yaml.stat.exists
    block:
      - include_tasks: tasks/jira-comment.yml
        vars:
          comment: |
            Hi,

            Unfortunately, I can't find your nominated software factory and so I am unable to complete this ticket.

            Please double check your software factory name and please re-submit.

            I will close this ticket, but you are free to open another ticket with corrected information.

            Thanks.
          transitions:
            - { status: "Canceled", transition: "Cancel request" }
            - { status: "Closed", transition: "Close" }

      - meta: end_play

  #
  # if we get here, it means the software factory was found in state.
  #
  # because we're slack for the time being, let's just create a bog standard TsscPipeline resource
  # just like the sample.
  - name: pipeline - create tsscpipeline resource
    template:
      src: pipeline/sample-tssc-pipeline.yml
      dest: "{{ factory_dir }}"
    register: pipeline_template

  - when:
    - pipeline_template.changed
    block:
    - include_tasks: tasks/git-commit-push.yml
      vars:
        key_file: "{{ lookup('env', 'SSH_PRIVATE_KEY_FILE') }}"
        commit_message: "Adding new software pipeline '{{ pipeline_name }}' to software factory '{{ software_factory.name }}'"

    - include_tasks: tasks/jira-comment.yml
      vars:
        transitions:
          - { status: "In Progress", transition: "In progress" }
        comment: |
          Hello!

          Your request to provision a new software pipeline has been received.

          It will be actioned automatically. Your pipeline has been added to the system of record and is now undergoing provisioning.

          Please sit tight.

          Thanks.

  - name: k8s - get kubernetes auth token 
    community.kubernetes.k8s_auth: 
      username: "{{ lookup('env', 'OPENSHIFT_API_USERNAME') }}" 
      password: "{{ lookup('env',' OPENSHIFT_API_PASSWORD') }}" 
    register: k8s_auth_results

  - name: k8s - wait for tsscpipeline to finish rollout
    community.kubernetes.k8s_info:
      api_version: redhatgov.io/v1alpha1
      kind: TsscPipeline
      name: "sp-{{ pipeline_name }}"
      namespace: "{{ software_factory.name }}"
      api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
    register: pipeline_resource
    delay: 30
    retries: 10
    until: 
      - pipeline_resource.resources | length > 0
      - pipeline_resource.resources[0].status is defined
      - pipeline_resource.resources[0].status | json_query("conditions[?(@.reason=='Successful')]")

  - name: jsm - comment and close
    include_tasks: tasks/jira-comment.yml
    vars:
      transitions:
        - { transition: "Resolve this issue", status: "Resolved" }
        - { transition: "Close", status: "Closed" }
      comment: |
        Hi, your new pipeline has been provisioned successfully. Repositories are available within Gitea and you can view the state of the pipeline through your Jenkins instance.
